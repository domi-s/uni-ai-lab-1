This is my output for task 5.

# n-puzzle

## n-puzzle BFTS

This is a demonstration of breadth-first tree search on 8-puzzle (Domi's version)

0: start

-------------
| 7 | 4 | 2 |
-------------
| 8 | 1 | 3 |
-------------
| 5 |   | 6 |
-------------

1: move LEFT

-------------
| 7 | 4 | 2 |
-------------
| 8 | 1 | 3 |
-------------
|   | 5 | 6 |
-------------

2: move UP

-------------
| 7 | 4 | 2 |
-------------
|   | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

3: move UP

-------------
|   | 4 | 2 |
-------------
| 7 | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

4: move RIGHT

-------------
| 4 |   | 2 |
-------------
| 7 | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

5: move DOWN

-------------
| 4 | 1 | 2 |
-------------
| 7 |   | 3 |
-------------
| 8 | 5 | 6 |
-------------

6: move DOWN

-------------
| 4 | 1 | 2 |
-------------
| 7 | 5 | 3 |
-------------
| 8 |   | 6 |
-------------

7: move LEFT

-------------
| 4 | 1 | 2 |
-------------
| 7 | 5 | 3 |
-------------
|   | 8 | 6 |
-------------

8: move UP

-------------
| 4 | 1 | 2 |
-------------
|   | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

9: move UP

-------------
|   | 1 | 2 |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

10: move RIGHT

-------------
| 1 |   | 2 |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

11: move RIGHT

-------------
| 1 | 2 |   |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

12: move DOWN

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 |   |
-------------
| 7 | 8 | 6 |
-------------

13: move DOWN

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 | 6 |
-------------
| 7 | 8 |   |
-------------

Node count (performance): 2298274
Max nodes on frontier: 1473871

## n-puzzle BFGS

This is a demonstration of breadth-first graph search on 8-puzzle (Domi's version)

0: start

-------------
| 7 | 4 | 2 |
-------------
| 8 | 1 | 3 |
-------------
| 5 |   | 6 |
-------------

1: move LEFT

-------------
| 7 | 4 | 2 |
-------------
| 8 | 1 | 3 |
-------------
|   | 5 | 6 |
-------------

2: move UP

-------------
| 7 | 4 | 2 |
-------------
|   | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

3: move UP

-------------
|   | 4 | 2 |
-------------
| 7 | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

4: move RIGHT

-------------
| 4 |   | 2 |
-------------
| 7 | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

5: move DOWN

-------------
| 4 | 1 | 2 |
-------------
| 7 |   | 3 |
-------------
| 8 | 5 | 6 |
-------------

6: move DOWN

-------------
| 4 | 1 | 2 |
-------------
| 7 | 5 | 3 |
-------------
| 8 |   | 6 |
-------------

7: move LEFT

-------------
| 4 | 1 | 2 |
-------------
| 7 | 5 | 3 |
-------------
|   | 8 | 6 |
-------------

8: move UP

-------------
| 4 | 1 | 2 |
-------------
|   | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

9: move UP

-------------
|   | 1 | 2 |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

10: move RIGHT

-------------
| 1 |   | 2 |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

11: move RIGHT

-------------
| 1 | 2 |   |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

12: move DOWN

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 |   |
-------------
| 7 | 8 | 6 |
-------------

13: move DOWN

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 | 6 |
-------------
| 7 | 8 |   |
-------------

Node count: 4360
Max nodes on frontier: 1592

## n-puzzle DFTS

It gives out the following error:

```
This is a demonstration of depth-first tree search on 8-puzzle (Domi's version)

Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at search.TreeSearch.findSolution(TreeSearch.java:24)
	at npuzzle.Domi_Demo.DFTSearch(Domi_Demo.java:57)
	at npuzzle.Domi_Demo.main(Domi_Demo.java:9)

Process finished with exit code 1
```

## n-puzzle DFGS

This is a demonstration of depth-first graph search on 8-puzzle (Domi's version)

0: start

-------------
| 7 | 4 | 2 |
-------------
| 8 | 1 | 3 |
-------------
| 5 |   | 6 |
-------------

...

18911: move DOWN

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 | 6 |
-------------
| 7 | 8 |   |
-------------

Node count: 34267
Max nodes on frontier: 14480

## n-puzzle IDTS

This is a demonstration of iterative deepening tree search on 8-puzzle (Domi's version)

0: start

-------------
| 7 | 4 | 2 |
-------------
| 8 | 1 | 3 |
-------------
| 5 |   | 6 |
-------------

1: move LEFT

-------------
| 7 | 4 | 2 |
-------------
| 8 | 1 | 3 |
-------------
|   | 5 | 6 |
-------------

2: move UP

-------------
| 7 | 4 | 2 |
-------------
|   | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

3: move UP

-------------
|   | 4 | 2 |
-------------
| 7 | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

4: move RIGHT

-------------
| 4 |   | 2 |
-------------
| 7 | 1 | 3 |
-------------
| 8 | 5 | 6 |
-------------

5: move DOWN

-------------
| 4 | 1 | 2 |
-------------
| 7 |   | 3 |
-------------
| 8 | 5 | 6 |
-------------

6: move DOWN

-------------
| 4 | 1 | 2 |
-------------
| 7 | 5 | 3 |
-------------
| 8 |   | 6 |
-------------

7: move LEFT

-------------
| 4 | 1 | 2 |
-------------
| 7 | 5 | 3 |
-------------
|   | 8 | 6 |
-------------

8: move UP

-------------
| 4 | 1 | 2 |
-------------
|   | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

9: move UP

-------------
|   | 1 | 2 |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

10: move RIGHT

-------------
| 1 |   | 2 |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

11: move RIGHT

-------------
| 1 | 2 |   |
-------------
| 4 | 5 | 3 |
-------------
| 7 | 8 | 6 |
-------------

12: move DOWN

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 |   |
-------------
| 7 | 8 | 6 |
-------------

13: move DOWN

-------------
| 1 | 2 | 3 |
-------------
| 4 | 5 | 6 |
-------------
| 7 | 8 |   |
-------------

Node count: 1211853
Max nodes on frontier: 25

## n-puzzle thoughts

We can see that although Graph Search uses a set to check for already visited nodes (and thus uses more memory), this drastically improves the time efficiency of the code, by several orders of magnitude (even preventing crashing in the case of DFS, which essentially traverses all possible routes in such a way that finding the solution is less practical).

# Romania tour

## tour BFTS

This is a demonstration of breadth-first tree search on Romania tour (Domi's version)

0: start

Bucharest

1: drive for 211km to

Fagaras

2: drive for 99km to

Sibiu

3: drive for 140km to

Arad

4: drive for 75km to

Zerind

5: drive for 71km to

Oradea

6: drive for 151km to

Sibiu

7: drive for 80km to

Rimnicu Vilcea

8: drive for 146km to

Craiova

9: drive for 138km to

Pitesti

10: drive for 101km to

Bucharest

11: drive for 90km to

Giurgui

12: drive for 90km to

Bucharest

Node count: 75973
Max nodes on frontier: 44217

## tour BFGS

This is a demonstration of breadth-first graph search on Romania tour (Domi's version)

0: start

Bucharest

1: drive for 211km to

Fagaras

2: drive for 99km to

Sibiu

3: drive for 140km to

Arad

4: drive for 75km to

Zerind

5: drive for 71km to

Oradea

6: drive for 151km to

Sibiu

7: drive for 80km to

Rimnicu Vilcea

8: drive for 146km to

Craiova

9: drive for 138km to

Pitesti

10: drive for 101km to

Bucharest

11: drive for 90km to

Giurgui

12: drive for 90km to

Bucharest

Node count: 7236
Max nodes on frontier: 2707

## tour DFTS

This is a demonstration of depth-first tree search on Romania tour (Domi's version)

Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.LinkedHashMap$LinkedKeySet.iterator(LinkedHashMap.java:700)
	at java.base/java.util.HashSet.iterator(HashSet.java:182)
	at java.base/java.util.AbstractCollection.addAll(AbstractCollection.java:337)
	at java.base/java.util.LinkedHashSet.<init>(LinkedHashSet.java:182)
	at tour.TourState.getActionResult(TourState.java:27)
	at search.TreeSearch.findSolution(TreeSearch.java:24)
	at tour.Domi_Demo.DFTSearch(Domi_Demo.java:73)
	at tour.Domi_Demo.main(Domi_Demo.java:9)

## tour DFGS

This is a demonstration of depth-first graph search on Romania tour (Domi's version)

0: start

Bucharest

1: drive for 101km to

Pitesti

2: drive for 138km to

Craiova

3: drive for 146km to

Rimnicu Vilcea

4: drive for 80km to

Sibiu

5: drive for 80km to

Rimnicu Vilcea

6: drive for 146km to

Craiova

7: drive for 138km to

Pitesti

8: drive for 101km to

Bucharest

9: drive for 101km to

Pitesti

10: drive for 138km to

Craiova

11: drive for 146km to

Rimnicu Vilcea

12: drive for 80km to

Sibiu

13: drive for 151km to

Oradea

14: drive for 71km to

Zerind

15: drive for 71km to

Oradea

16: drive for 151km to

Sibiu

17: drive for 80km to

Rimnicu Vilcea

18: drive for 146km to

Craiova

19: drive for 138km to

Pitesti

20: drive for 101km to

Bucharest

21: drive for 90km to

Giurgui

22: drive for 90km to

Bucharest

23: drive for 101km to

Pitesti

24: drive for 138km to

Craiova

25: drive for 146km to

Rimnicu Vilcea

26: drive for 80km to

Sibiu

27: drive for 140km to

Arad

28: drive for 140km to

Sibiu

29: drive for 99km to

Fagaras

30: drive for 211km to

Bucharest

Node count: 62
Max nodes on frontier: 19

## tour IDTS